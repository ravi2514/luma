<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="tulasi-mbp.lan" ignored="0" name="Default test" tests="40" failures="0" timestamp="23 May 2019 13:08:43 GMT" time="0.075" errors="0">
  <testcase name="@BeforeSuite openBrowser" time="0.0" classname="com.lib.BrowserIntializer">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeSuite on method openBrowser but has not been marked @Optional or defined
in /private/var/folders/my/j91kgyw53sb6x96z20dmpxth0000gn/T/testng-eclipse-1382730/testng-customsuite.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeSuite on method openBrowser but has not been marked @Optional or defined
in /private/var/folders/my/j91kgyw53sb6x96z20dmpxth0000gn/T/testng-eclipse-1382730/testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:290)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:359)
at org.testng.internal.Parameters.createParameters(Parameters.java:620)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:190)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:209)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:401)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeSuite openBrowser -->
  <testcase name="serialNumberValidationInSections" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- serialNumberValidationInSections -->
  <testcase name="verifyAllFields" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- verifyAllFields -->
  <testcase name="calender_FutureDateValidation" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- calender_FutureDateValidation -->
  <testcase name="addressMandatoryFields" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- addressMandatoryFields -->
  <testcase name="registerProdThruSerialNumber" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- registerProdThruSerialNumber -->
  <testcase name="validateSerialNumberWithAnotherUser" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- validateSerialNumberWithAnotherUser -->
  <testcase name="deleteExistingAddress" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- deleteExistingAddress -->
  <testcase name="validateScreenProctectionAccordions" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- validateScreenProctectionAccordions -->
  <testcase name="validateBatteryAndCasesAccordions" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- validateBatteryAndCasesAccordions -->
  <testcase name="validateKeyboardAccordions" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- validateKeyboardAccordions -->
  <testcase name="validateAudioAndSpeakersAccordions" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- validateAudioAndSpeakersAccordions -->
  <testcase name="validateCabesAndPortablePowerAccordions" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- validateCabesAndPortablePowerAccordions -->
  <testcase name="validateWirelessDocksAccordions" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- validateWirelessDocksAccordions -->
  <testcase name="validateReplacementPartsAndOthersAccordions" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- validateReplacementPartsAndOthersAccordions -->
  <testcase name="storeBrand$DevicesAllAttributeOptionsFromAdmin" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- storeBrand$DevicesAllAttributeOptionsFromAdmin -->
  <testcase name="storeDeviceTypeAttributeOptionsFromAdmin" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- storeDeviceTypeAttributeOptionsFromAdmin -->
  <testcase name="storeScreenProtection$BatterCasesProducts" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- storeScreenProtection$BatterCasesProducts -->
  <testcase name="category_ScreenProtect_VerifyDeviceType" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- category_ScreenProtect_VerifyDeviceType -->
  <testcase name="validateBrand$Device$ProductAttributeForScreenProtection" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- validateBrand$Device$ProductAttributeForScreenProtection -->
  <testcase name="category_batteryCases_RegisterProduct" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- category_batteryCases_RegisterProduct -->
  <testcase name="registerAutomaticallyBatteryCasesProduct" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- registerAutomaticallyBatteryCasesProduct -->
  <testcase name="registerAudioProduct" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- registerAudioProduct -->
  <testcase name="regScreenProtectionProduct" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- regScreenProtectionProduct -->
  <testcase name="regCables$AdaptersProduct" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- regCables$AdaptersProduct -->
  <testcase name="regSpeakersProduct" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- regSpeakersProduct -->
  <testcase name="regKeyboardsProduct" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- regKeyboardsProduct -->
  <testcase name="regPortablePowerProduct" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- regPortablePowerProduct -->
  <testcase name="backToOptionsFromReveiw" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- backToOptionsFromReveiw -->
  <testcase name="compareOneBrandToAnother" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- compareOneBrandToAnother -->
  <testcase name="registerBatteryCasesProductForWR" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- registerBatteryCasesProductForWR -->
  <testcase name="registerMultiBatteryCasesProducts" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- registerMultiBatteryCasesProducts -->
  <testcase name="registerMultiCable$AdaptersProducts" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- registerMultiCable$AdaptersProducts -->
  <testcase name="registerMultiCasesProducts" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- registerMultiCasesProducts -->
  <testcase name="registerMultiHeadphonesProducts" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- registerMultiHeadphonesProducts -->
  <testcase name="registerMultiKeyboardsProducts" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- registerMultiKeyboardsProducts -->
  <testcase name="registerMultiReplacementPartsProducts" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- registerMultiReplacementPartsProducts -->
  <testcase name="registerMultiScreenProtectionProduct" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- registerMultiScreenProtectionProduct -->
  <testcase name="registerMultiSpeakersProducts" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- registerMultiSpeakersProducts -->
  <testcase name="registerMultiWirelessDocksProducts" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- registerMultiWirelessDocksProducts -->
  <testcase name="registerMultiProtablePowerProducts" time="0.0" classname="zagg.prodRegistration.ProductRegistartionTests">
    <skipped/>
  </testcase> <!-- registerMultiProtablePowerProducts -->
</testsuite> <!-- Default test -->
